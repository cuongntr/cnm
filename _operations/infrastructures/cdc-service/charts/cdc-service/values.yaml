# Default values for cdc-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: eventuateio/eventuate-cdc-service
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.9.0.RELEASE"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Custom configuration
spring:
  profiles:
    active: PostgresWal
eventuatelocal:
  kafka:
    bootstrap:
      servers: kafka.example.svc.cluster.local:9092
  zookeeper:
    connection:
      string: kafka-zookeeper.example.svc.cluster.local:2181
eventuate:
  cdc:
    pipeline:
      pipelineproductservice:
        type: eventuate-tram
        reader: ProductService
        eventuatedatabaseschema: eventuate
      pipelineinventoryservice:
        type: eventuate-tram
        reader: InventoryService
        eventuatedatabaseschema: eventuate
      pipelineorderservice:
          type: eventuate-tram
          reader: OrderService
          eventuatedatabaseschema: eventuate
    reader:
      productservice:
        type: postgres-wal
        datasourceurl: jdbc:postgresql://postgres-product-service-postgresql.example.svc.cluster.local:5432/example-product-service
        datasourceusername: postgres
        datasourcepassword: postgres
        datasourcedriverclassname: org.postgresql.Driver
        leadershiplockpath: /eventuatelocal/cdc/leader/pipeline/example-product-service
      inventoryservice:
        type: postgres-wal
        datasourceurl: jdbc:postgresql://postgres-inventory-service-postgresql.example.svc.cluster.local:5432/example-inventory-service
        datasourceusername: postgres
        datasourcepassword: postgres
        datasourcedriverclassname: org.postgresql.Driver
        leadershiplockpath: /eventuatelocal/cdc/leader/pipeline/example-inventory-service
      orderservice:
          type: postgres-wal
          datasourceurl: jdbc:postgresql://postgres-order-service-postgresql.example.svc.cluster.local:5432/example-order-service
          datasourceusername: postgres
          datasourcepassword: postgres
          datasourcedriverclassname: org.postgresql.Driver
          leadershiplockpath: /eventuatelocal/cdc/leader/pipeline/example-order-service


# Kafka can be accessed by consumers via port 9092 on the following DNS name from within your cluster:
#   kafka.example.svc.cluster.local
#
# Each Kafka broker can be accessed by producers via port 9092 on the following DNS name(s) from within your cluster:
#   kafka-0.kafka-headless.example.svc.cluster.local:9092

#    PRODUCER:
#      kafka-console-producer.sh \
#
#      --broker-list kafka-0.kafka-headless.example.svc.cluster.local:9092 \
#      --topic test
#
#    CONSUMER:
#      kafka-console-consumer.sh \
#
#      --bootstrap-server kafka.example.svc.cluster.local:9092 \
#      --topic test \
#      --from-beginning


